package com.max.core.utils;

import com.google.common.collect.ImmutableList;

import java.util.List;

/**
 * Created by ken on 2018/5/14.
 */
public interface GlobalConstants {
    /**
     * 系统状态
     *
     * @author Leo
     *
     */
    interface SystemStatus {
        int SUCCESS = 0; // 成功
        int FAILED = 1; // 失败
        int INVALID_CONDITION = 2; // 前置条件不满足
    }

    /**
     * 彩种，玩法状态
     *
     * @author Leo
     *
     *         2015年8月5日 下午1:44:42
     */
    interface TicketStatus {
        int SALING = 0; // 正在销售
        int UNSALE = 1; // 停止销售
        int PRESALE = 2; // 即将销售
    }

    /**
     * 开奖状态
     *
     * @author Leo
     *
     *         2015年8月13日 下午6:24:16
     */
    interface TicketOpenStatus {
        int SALING = 0; // 销售中
        int EARLIER_OPEN = 1; // 提前开奖
        int UN_OPEN = 2; // 官方未开奖
        int DELAY_OPEN = 3; // 延期销售
        int CORRECT_OPENED = 4; // 正常开奖

        int UNCHECKED = 0; // 未处理
        int CHECKED = 1; // 已处理
    }

    /**
     * 投注，追号状态
     *
     * @author Leo
     *
     *         2015年8月5日 下午1:44:52
     */
    interface BetStatus {
        int UNOPEN = 0; // 未开奖
        int WIN = 1; // 已中奖
        int UNWIN = 2; // 未中奖
        int CANCEL = 3; // 已撤单
    }

    /**
     * 投注模式
     *
     * @author ab
     *
     */
    interface BetMethod {
        int YUAN = 10000;
        int JIAO = 1000;
        int FEN = 100;
        int LI = 10;
    }

    /**
     * 开关状态
     *
     * @author ab
     *
     */
    interface OpenStatus {
        int TRUE = 1;
        int FALSE = 0;
    }

    /**
     * 追号状态
     *
     * @author Leo
     *
     *         2015年10月16日 上午10:02:02
     */
    interface ChaseStatus {
        int INIT = 0;
        int DOING = 1;
        int FINISHED = 2;
        int STOPPED = 3;
    }

    interface CommonStatus {
        int AVALIABLE = 0;
        int UN_AVALIABLE = 1;
    }

    /**
     * 返点状态
     *
     * @author Leo
     *
     *         2015年8月5日 下午1:50:07
     */
    interface BonusStatus {
        int DONE = 1; // 已经返点
        int TODO = 0; // 等待返点
    }

    /**
     * 奖金模式
     *
     * @author ab
     *
     */
    interface MoneyMethod {
        int MIN = 1;
        int MAX = 0;
    }

    /**
     * 可提现余额限制
     *
     * @author Leo
     *
     *         2015年8月4日 上午11:53:37
     */
    interface ValidBalanceType {
        String TYPE_KEY = "validBalanceType";
        String LIMIT_KEY = "validBalanceLimit";
        String ID_SEPARATOR = ",";
        int TOP_USER_RECHARGE = 1;
        int SUB_USER_RECHARGE = 2;
        int TOP_USER_TRANSFER = 3;
        int SUB_USER_TRANSFER = 4;
        int GAME_ADD = 5;
        int SYS_ADD = 6;
        int SYS_RECHARGE = 7; // 人工充值
        int SYS_ACTIVITY_ADD = 8; // 活动派奖
        int SYS_PLATFORM_ADD = 9; // 平台奖励
        int SYS_PLATFORM_RETURN = 10; // 平台理赔
        int SYS_PROFIT_ADD = 11; // 平台分红
    }

    /**
     * 用户帐变类型
     *
     * @author Leo
     *
     *         2015年8月4日 上午11:58:41
     */
    interface BalanceType {
        int TYPE_RECHARGE = 100; // 充值
        int TYPE_MONEY = 101; // 中奖
        int TYPE_BONUS = 102; // 返点
        int TYPE_BET_CANCEL = 103; // 撤单
        int TYPE_SYS_BET_CANCEL = 113; // 系统撤单
        int TYPE_USER_BET_CANCEL = 123; // 用户撤单

        int TYPE_TRANSFER_ADD = 104; // 转账(加款)
        int TYPE_WITHDRAW_FAIL = 125; // 提现失败退款
        int TYPE_GAME_ADD = 105; // 系统加币

        int TYPE_WITHDRAW = 106; // 提现、提现扣款
        int TYPE_BET = 107; // 投注、投注扣款
        int TYPE_TRANSFER_DIS = 108; // 转账(扣款)
        int TYPE_BAG_IN = 114; // 钱包转入
        int TYPE_BAG_OUT = 118; // 钱包转出
        int TYPE_GAME_DIS = 109; // 系统扣币
        int TYPE_REDPACK_REFUND = 120; // 红包退款
        int TYPE_REDPACK_OPEN = 220; // 红包开户-支出
        int TYPE_REDPACK_OPEN_GET = 221; // 红包开户-收入
        int GAME_DIVID_IN = 205; // 招商直属游戏签约分红
        int GAME_DIVID_AGREE_IN = 214; // 游戏签约分红转入
        int GAME_DIVID_AGREE_OUT = 218; // 游戏签约分红转出
        int GAME_REBATE = 245; // 游戏平台返水 245-260 (246:AG, 247:EBET, 248:BBIN, 249:PT, 250:MG, 251:贝博体育)

        int ACTIVITY_GET_TICKET = 191; // 彩票活动
        int ACTIVITY_GET_GAME = 291; // 游戏活动
        int ACTIVITY_GET = 192; // 活动代表号

        int[] TYPES_ACTIVITY = {ACTIVITY_GET_TICKET, ACTIVITY_GET_GAME}; // 活动类型
        int[] TYPES_BET_CANCEL = {TYPE_SYS_BET_CANCEL, TYPE_USER_BET_CANCEL}; // 撤单类型
        int[] TYPES_SYSTEM_ADD = {TYPE_GAME_ADD, GAME_DIVID_IN}; // 系统加币类型


        // 操作类型：101加币-活动派奖，102加币-平台奖励，103加币-平台理赔，104加币-平台分红，105-人工充值，106-节日红包，201减币-人工提现，202减币-人工扣回，203减币-重复打款
        int ACTIVITY_ADD = 101;
        int PLATFORM_ADD = 102;
        int PLATFORM_RETURN = 103;
        int PROFIT_ADD = 104;
        int RECHARGE_ADD = 105;
        int FESTIVAL_ADD = 106;
        int TRANSFER_ADD = 107;
        int TRANSFER_LOST_ADD = 108; // 转账掉单
        int MANUAL_WITHDRAW = 201;
        int MANUAL_RETURN = 202;
        int DUPLICATE_FUND = 203;
        int TRANSFER_DIS = 204;

        int[] SYS_RECHARGE_TYPE = {ACTIVITY_ADD, PLATFORM_ADD, PLATFORM_RETURN, PROFIT_ADD,
                RECHARGE_ADD, FESTIVAL_ADD, TRANSFER_ADD, TRANSFER_LOST_ADD, MANUAL_WITHDRAW, MANUAL_RETURN,
                DUPLICATE_FUND, TRANSFER_DIS};

        int API_TRANSFER = 1; // 接口转账出款
        int MANUAL_TRANSFER = 0; // 手动转账出款
    }

    interface OperateType {
        short DELETE = 0;
        short ADD = 1;
        short UPDATE = 2;
    }

    /**
     * 平台活动状态
     *
     * @author Leo
     *
     *         2015年8月4日 上午11:53:37
     */
    interface ActivityType {

        int TICKET = 0; // 彩票
        int GAME = 1; // 游戏

        int OnLine = 0; // 进行中
        int WAITING = 1; // 未开始
        int OffLine = 2; // 已结束

        int RAFFLE = 1; // 抽奖活动
        int PACKAGE = 2; // 礼包活动
        int RAIN = 3; // 下雨活动
        int PRIZE_REBATE = 4; // 返利活动
        int COMMISSION = 5; // 佣金
        int WAGES = 6; // 工资
        int SRPINT = 7; // 冲量
        int RED_ENVELOPE = 8; // 红包活动
        int MONEY_TREE = 9; // 摇钱树
        int RED_ENVELOPE_ID = 999999; // 红包活动ID
        int BIND_BONUS = 999998; // 绑定奖励-永久活动

        int ITEM_RECHARGE1 = 1; // 充值卡1
        int ITEM_RECHARGE2 = 2; // 充值卡2

        int ITEM_ZHUANYUN1 = 3; // 转运卡1
        int ITEM_ZHUANYUN2 = 4; // 转运卡2
        int ITEM_ZHUANYUN3 = 5; // 转运卡3

        int ITEM_DISCOUNT1 = 6; // 打折卡1

        int ITEM_PRIZEADD1 = 7; // 加奖卡1
        int IOS_LOGIN = 12; // IOS首次登陸
        int RECHARGE = 13; // 充值活动
        int FRIEND = 14; // 拉新活动
        int CHECKIN = 15; // 新用户报到
        int DAILYSALES = 16; // 直属日量活动
        int BET_REWARD = 17; // 投注奖金

        int BETREBATE = 22; // 返水活动
        int BETLOTTERY = 24; // 投注抽奖（无连抽）

        int REBATE_REWARD = 25; // 加奖&补贴活动
        int SALES = 26; // 日量
        int VOLCANO = 27; // 火山活动
        int CAI_CC = 28; // 彩彩财活动
        int PIRATE = 29; // 海盗船活动
        int MONEY_REBATE = 30; // 红包返水
        int USER_PACKAGE = 31; // 老用户回归
        int RECHARGE_BONUS = 32; // 充值活动
        int MOBILE_DAILY = 33; // 移动端每日登入活动
        int PRE_SALES = 34; // 准直属日量活动
        int OVERFULFIL = 35; // 用户投注突破活动
        int USERLOST = 36; // 用户流失活动
        int ALL_CHEST = 37; // 全民来打宝
        int GAME_COMMISSION = 38; // 游戏佣金，上级与上上级返点
        int PROMOTION_RED = 39; // 推广注册优惠红包
        int OVERMILLION = 40; // 百万突破活动
        int REDPACK = 41; // 自营彩红包活动
        int DAILY_BOX = 42; // 每日宝箱
        int NEW_PACK = 43; // 每日宝箱
        int LOSS_WAGES = 44; // 亏损补贴 (参考工资: WAGES)
        int AGENT_DAILY_CYCLE = 45; // 总代日量活动
        int AUTO_REDPACK = 46; // 自动红包发放
        int GAME_REDPACK = 47; // 游戏宝箱
        int LADDER_WAGES = 48; // 阶梯工资活动
        int WISH_WALL = 49; // 祝福墙活动
        int ANNI_PACK = 50; // 周年庆礼包活动
        int TORCH_THROW = 51; // 丢火把活动
        int BET_TARGET = 52; // 投注活动
        int RECHARGE_TARGET = 53; // 充值活动

        int LIPA = 1235; // 理赔
        int INTEGRAL_MALL = 1001; // 积分商城
    }

    interface ActivityStatus {
        int OK = 0; // 可以进行
        int INVALID_ACTIVITY_TIME = 1; // 错误的活动时间
        int INVALID_GET_TIME = 2; // 错误的领奖时间
        int INVALID_USER = 3; // 用户本身不符合条件
        int INVALID_PRE_CONDITION = 4; // 用户未达成活动目标
        int INVALID_GET_TIMES = 5; // 用户参与活动次数已用完
        int INVALID_PRE_CONDITION_CONSUMPTION = 6; // 用户消费额度不足1000，请消费后再来抢。
    }

    /**
     * 彩种开奖形态
     *
     * @author Frank
     *
     */
    interface TicketOpenType {
        // 号码共有 0~9，一次开五个号码的彩种
        Integer[] TYPE_95 = {TicketType.CQSSC, TicketType.XJSSC, TicketType.P5P3, TicketType.TJSSC,
                TicketType.HLJSSC, TicketType.FFC, TicketType.FFC5, TicketType.FFC3, TicketType.KR105,
                TicketType.TWBG, TicketType.XJP2, TicketType.BJ5, TicketType.DJ105, TicketType.F105,
                TicketType.CD305, TicketType.TXFFC, TicketType.QQ30, TicketType.QQ105, TicketType.QQFFC};

        // 号码共有 01~11，一次开五个号码的彩种
        Integer[] TYPE_115 = {TicketType.GD115, TicketType.SD115, TicketType.JX115, TicketType.FFC115,
                TicketType.FFC3115, TicketType.JS115, TicketType.HN115, TicketType.BJ115};

        // 号码共有 0~9，一次开三个号码的彩种
        Integer[] TYPE_93 = {TicketType.FC3D, TicketType.FFC3D, TicketType.FFC53D, TicketType.TXFFC3D,
                TicketType.QQFFC3D};

        // 号码共有 01~10，一次开十个号码的彩种
        Integer[] TYPE_1010 = {TicketType.BJPK10};

        // 号码共有 1~6，一次开三个号码的彩种
        Integer[] TYPE_63 = {TicketType.JSK3};
    }


    /**
     * 彩种玩法 group
     *
     * @author Frank
     *
     */
    interface TicketPlayGroup {
        // 五星直选复式
        int[] GROUP1 = {1010101, 2010101, 3010101, 8010101, 9010101, 10010101, 12010101, 13010101,
                19010101, 21010101, 24010101, 25010101, 26010101, 27010101, 28010101, 30010101, 31010101,
                32010101, 33010101};

        // 五星直选单式
        int[] GROUP2 = {1010102, 2010102, 3010102, 8010102, 9010102, 10010102, 12010102, 13010102,
                19010102, 21010102, 24010102, 25010102, 26010102, 27010102, 28010102, 30010102, 31010102,
                32010102, 33010102};

        // 五星组选120
        int[] GROUP3 = {1010201, 2010201, 3010201, 8010201, 9010201, 10010201, 12010201, 13010201,
                19010201, 21010201, 24010201, 25010201, 26010201, 27010201, 28010201, 30010201, 31010201,
                32010201, 33010201};

        // 五星组选60
        int[] GROUP4 = {1010202, 2010202, 3010202, 8010202, 9010202, 10010202, 12010202, 13010202,
                19010202, 21010202, 24010202, 25010202, 26010202, 27010202, 28010202, 30010202, 31010202,
                32010202, 33010202};

        // 五星组选30
        int[] GROUP5 = {1010203, 2010203, 3010203, 8010203, 9010203, 10010203, 12010203, 13010203,
                19010203, 21010203, 24010203, 25010203, 26010203, 27010203, 28010203, 30010203, 31010203,
                32010203, 33010203};

        // 五星组选20
        int[] GROUP6 = {1010204, 2010204, 3010204, 8010204, 9010204, 10010204, 12010204, 13010204,
                19010204, 21010204, 24010204, 25010204, 26010204, 27010204, 28010204, 30010204, 31010204,
                32010204, 33010204};

        // 五星组选10
        int[] GROUP7 = {1010205, 2010205, 3010205, 8010205, 9010205, 10010205, 12010205, 13010205,
                19010205, 21010205, 24010205, 25010205, 26010205, 27010205, 28010205, 30010205, 31010205,
                32010205, 33010205};

        // 五星组选5
        int[] GROUP8 = {1010206, 2010206, 3010206, 8010206, 9010206, 10010206, 12010206, 13010206,
                19010206, 21010206, 24010206, 25010206, 26010206, 27010206, 28010206, 30010206, 31010206,
                32010206, 33010206};

        // 四星直选复式
        int[] GROUP9 = {1020101, 2020101, 3020101, 8020101, 9020101, 10020101, 12020101, 13020101,
                19020101, 21020101, 24020101, 25020101, 26020101, 27020101, 28020101, 30020101, 31020101,
                32020101, 33020101};

        // 四星直选单式
        int[] GROUP10 = {1020102, 2020102, 3020102, 8020102, 9020102, 10020102, 12020102, 13020102,
                19020102, 21020102, 24020102, 25020102, 26020102, 27020102, 28020102, 30020102, 31020102,
                32020102, 33020102};

        // 四星组选24
        int[] GROUP11 = {1020201, 2020201, 3020201, 8020201, 9020201, 10020201, 12020201, 13020201,
                19020201, 21020201, 24020201, 25020201, 26020201, 27020201, 28020201, 30020201, 31020201,
                32020201, 33020201};

        // 四星组选12
        int[] GROUP12 = {1020202, 2020202, 3020202, 8020202, 9020202, 10020202, 12020202, 13020202,
                19020202, 21020202, 24020202, 25020202, 26020202, 27020202, 28020202, 30020202, 31020202,
                32020202, 33020202};

        // 四星组选6
        int[] GROUP13 = {1020203, 2020203, 3020203, 8020203, 9020203, 10020203, 12020203, 13020203,
                19020203, 21020203, 24020203, 25020203, 26020203, 27020203, 28020203, 30020203, 31020203,
                32020203, 33020203};

        // 四星组选4
        int[] GROUP14 = {1020204, 2020204, 3020204, 8020204, 9020204, 10020204, 12020204, 13020204,
                19020204, 21020204, 24020204, 25020204, 26020204, 27020204, 28020204, 30020204, 31020204,
                32020204, 33020204};

        // 前三直选复式
        int[] GROUP15 = {1030101, 2030101, 3030101, 8030101, 9030101, 10030101, 12030101, 13030101,
                19030101, 21030101, 24030101, 25030101, 26030101, 27030101, 28030101, 30030101, 31030101,
                32030101, 33030101};

        // 前三直选单式
        int[] GROUP16 = {1030102, 2030102, 3030102, 8030102, 9030102, 10030102, 12030102, 13030102,
                19030102, 21030102, 24030102, 25030102, 26030102, 27030102, 28030102, 30030102, 31030102,
                32030102, 33030102};

        // 前三直选和值
        int[] GROUP17 = {1030103, 2030103, 3030103, 8030103, 9030103, 10030103, 12030103, 13030103,
                19030103, 21030103, 24030103, 25030103, 26030103, 27030103, 28030103, 30030103, 31030103,
                32030103, 33030103};

        // 前三直选跨度
        int[] GROUP18 = {1030104, 2030104, 3030104, 8030104, 9030104, 10030104, 12030104, 13030104,
                19030104, 21030104, 24030104, 25030104, 26030104, 27030104, 28030104, 30030104, 31030104,
                32030104, 33030104};

        // 前三组三
        int[] GROUP19 = {1030201, 2030201, 3030201, 8030201, 9030201, 10030201, 12030201, 13030201,
                19030201, 21030201, 24030201, 25030201, 26030201, 27030201, 28030201, 30030201, 31030201,
                32030201, 33030201};

        // 前三组六
        int[] GROUP20 = {1030202, 2030202, 3030202, 8030202, 9030202, 10030202, 12030202, 13030202,
                19030202, 21030202, 24030202, 25030202, 26030202, 27030202, 28030202, 30030202, 31030202,
                32030202, 33030202};

        // 前三组选和值
        int[] GROUP21 = {1030203, 2030203, 3030203, 8030203, 9030203, 10030203, 12030203, 13030203,
                19030203, 21030203, 24030203, 25030203, 26030203, 27030203, 28030203, 30030203, 31030203,
                32030203, 33030203};

        // 前三组选包胆
        int[] GROUP22 = {1030204, 2030204, 3030204, 8030204, 9030204, 10030204, 12030204, 13030204,
                19030204, 21030204, 24030204, 25030204, 26030204, 27030204, 28030204, 30030204, 31030204,
                32030204, 33030204};

        // 前三混合组选
        int[] GROUP23 = {1030205, 2030205, 3030205, 8030205, 9030205, 10030205, 12030205, 13030205,
                19030205, 21030205, 24030205, 25030205, 26030205, 27030205, 28030205, 30030205, 31030205,
                32030205, 33030205};

        // 中三直选复式
        int[] GROUP24 = {1040101, 2040101, 3040101, 8040101, 9040101, 10040101, 12040101, 13040101,
                19040101, 21040101, 24040101, 25040101, 26040101, 27040101, 28040101, 30040101, 31040101,
                32040101, 33040101};

        // 中三直选单式
        int[] GROUP25 = {1040102, 2040102, 3040102, 8040102, 9040102, 10040102, 12040102, 13040102,
                19040102, 21040102, 24040102, 25040102, 26040102, 27040102, 28040102, 30040102, 31040102,
                32040102, 33040102};

        // 中三直选和值
        int[] GROUP26 = {1040103, 2040103, 3040103, 8040103, 9040103, 10040103, 12040103, 13040103,
                19040103, 21040103, 24040103, 25040103, 26040103, 27040103, 28040103, 30040103, 31040103,
                32040103, 33040103};

        // 中三直选跨度
        int[] GROUP27 = {1040104, 2040104, 3040104, 8040104, 9040104, 10040104, 12040104, 13040104,
                19040104, 21040104, 24040104, 25040104, 26040104, 27040104, 28040104, 30040104, 31040104,
                32040104, 33040104};

        // 中三组三
        int[] GROUP28 = {1040201, 2040201, 3040201, 8040201, 9040201, 10040201, 12040201, 13040201,
                19040201, 21040201, 24040201, 25040201, 26040201, 27040201, 28040201, 30040201, 31040201,
                32040201, 33040201};

        // 中三组六
        int[] GROUP29 = {1040202, 2040202, 3040202, 8040202, 9040202, 10040202, 12040202, 13040202,
                19040202, 21040202, 24040202, 25040202, 26040202, 27040202, 28040202, 30040202, 31040202,
                32040202, 33040202};

        // 中三组选和值
        int[] GROUP30 = {1040203, 2040203, 3040203, 8040203, 9040203, 10040203, 12040203, 13040203,
                19040203, 21040203, 24040203, 25040203, 26040203, 27040203, 28040203, 30040203, 31040203,
                32040203, 33040203};

        // 中三组选包胆
        int[] GROUP31 = {1040204, 2040204, 3040204, 8040204, 9040204, 10040204, 12040204, 13040204,
                19040204, 21040204, 24040204, 25040204, 26040204, 27040204, 28040204, 30040204, 31040204,
                32040204, 33040204};

        // 中三混合组选
        int[] GROUP32 = {1040205, 2040205, 3040205, 8040205, 9040205, 10040205, 12040205, 13040205,
                19040205, 21040205, 24040205, 25040205, 26040205, 27040205, 28040205, 30040205, 31040205,
                32040205, 33040205};

        // 后三直选复式
        int[] GROUP33 = {1050101, 2050101, 3050101, 8050101, 9050101, 10050101, 12050101, 13050101,
                19050101, 21050101, 24050101, 25050101, 26050101, 27050101, 28050101, 30050101, 31050101,
                32050101, 33050101};

        // 后三直选单式
        int[] GROUP34 = {1050102, 2050102, 3050102, 8050102, 9050102, 10050102, 12050102, 13050102,
                19050102, 21050102, 24050102, 25050102, 26050102, 27050102, 28050102, 30050102, 31050102,
                32050102, 33050102};

        // 后三直选和值
        int[] GROUP35 = {1050103, 2050103, 3050103, 8050103, 9050103, 10050103, 12050103, 13050103,
                19050103, 21050103, 24050103, 25050103, 26050103, 27050103, 28050103, 30050103, 31050103,
                32050103, 33050103};

        // 后三直选跨度
        int[] GROUP36 = {1050104, 2050104, 3050104, 8050104, 9050104, 10050104, 12050104, 13050104,
                19050104, 21050104, 24050104, 25050104, 26050104, 27050104, 28050104, 30050104, 31050104,
                32050104, 33050104};

        // 后三组三
        int[] GROUP37 = {1050201, 2050201, 3050201, 8050201, 9050201, 10050201, 12050201, 13050201,
                19050201, 21050201, 24050201, 25050201, 26050201, 27050201, 28050201, 30050201, 31050201,
                32050201, 33050201};

        // 后三组六
        int[] GROUP38 = {1050202, 2050202, 3050202, 8050202, 9050202, 10050202, 12050202, 13050202,
                19050202, 21050202, 24050202, 25050202, 26050202, 27050202, 28050202, 30050202, 31050202,
                32050202, 33050202};

        // 后三组选和值
        int[] GROUP39 = {1050203, 2050203, 3050203, 8050203, 9050203, 10050203, 12050203, 13050203,
                19050203, 21050203, 24050203, 25050203, 26050203, 27050203, 28050203, 30050203, 31050203,
                32050203, 33050203};

        // 后三组选包胆
        int[] GROUP40 = {1050204, 2050204, 3050204, 8050204, 9050204, 10050204, 12050204, 13050204,
                19050204, 21050204, 24050204, 25050204, 26050204, 27050204, 28050204, 30050204, 31050204,
                32050204, 33050204};

        // 后三混合组选
        int[] GROUP41 = {1050205, 2050205, 3050205, 8050205, 9050205, 10050205, 12050205, 13050205,
                19050205, 21050205, 24050205, 25050205, 26050205, 27050205, 28050205, 30050205, 31050205,
                32050205, 33050205};

        // 前二直选复式
        int[] GROUP42 = {1060101, 2060101, 3060101, 8060101, 9060101, 10060101, 12060101, 13060101,
                19060101, 21060101, 24060101, 25060101, 26060101, 27060101, 28060101, 30060101, 31060101,
                32060101, 33060101};

        // 前二直选单式
        int[] GROUP43 = {1060102, 2060102, 3060102, 8060102, 9060102, 10060102, 12060102, 13060102,
                19060102, 21060102, 24060102, 25060102, 26060102, 27060102, 28060102, 30060102, 31060102,
                32060102, 33060102};

        // 前二直选和值
        int[] GROUP44 = {1060103, 2060103, 3060103, 8060103, 9060103, 10060103, 12060103, 13060103,
                19060103, 21060103, 24060103, 25060103, 26060103, 27060103, 28060103, 30060103, 31060103,
                32060103, 33060103};

        // 前二直选跨度
        int[] GROUP45 = {1060104, 2060104, 3060104, 8060104, 9060104, 10060104, 12060104, 13060104,
                19060104, 21060104, 24060104, 25060104, 26060104, 27060104, 28060104, 30060104, 31060104,
                32060104, 33060104};

        // 后二直选复式
        int[] GROUP46 = {1060105, 2060105, 3060105, 8060105, 9060105, 10060105, 12060105, 13060105,
                19060105, 21060105, 24060105, 25060105, 26060105, 27060105, 28060105, 30060105, 31060105,
                32060105, 33060105};

        // 后二直选单式
        int[] GROUP47 = {1060106, 2060106, 3060106, 8060106, 9060106, 10060106, 12060106, 13060106,
                19060106, 21060106, 24060106, 25060106, 26060106, 27060106, 28060106, 30060106, 31060106,
                32060106, 33060106};

        // 后二直选和值
        int[] GROUP48 = {1060107, 2060107, 3060107, 8060107, 9060107, 10060107, 12060107, 13060107,
                19060107, 21060107, 24060107, 25060107, 26060107, 27060107, 28060107, 30060107, 31060107,
                32060107, 33060107};

        // 后二直选跨度
        int[] GROUP49 = {1060108, 2060108, 3060108, 8060108, 9060108, 10060108, 12060108, 13060108,
                19060108, 21060108, 24060108, 25060108, 26060108, 27060108, 28060108, 30060108, 31060108,
                32060108, 33060108};

        // 前二组选复式
        int[] GROUP50 = {1060201, 2060201, 3060201, 8060201, 9060201, 10060201, 12060201, 13060201,
                19060201, 21060201, 24060201, 25060201, 26060201, 27060201, 28060201, 30060201, 31060201,
                32060201, 33060201};

        // 前二组选单式
        int[] GROUP51 = {1060202, 2060202, 3060202, 8060202, 9060202, 10060202, 12060202, 13060202,
                19060202, 21060202, 24060202, 25060202, 26060202, 27060202, 28060202, 30060202, 31060202,
                32060202, 33060202};

        // 前二组选和值
        int[] GROUP52 = {1060203, 2060203, 3060203, 8060203, 9060203, 10060203, 12060203, 13060203,
                19060203, 21060203, 24060203, 25060203, 26060203, 27060203, 28060203, 30060203, 31060203,
                32060203, 33060203};

        // 前二组选包胆
        int[] GROUP53 = {1060204, 2060204, 3060204, 8060204, 9060204, 10060204, 12060204, 13060204,
                19060204, 21060204, 24060204, 25060204, 26060204, 27060204, 28060204, 30060204, 31060204,
                32060204, 33060204};

        // 后二组选复式
        int[] GROUP54 = {1060205, 2060205, 3060205, 8060205, 9060205, 10060205, 12060205, 13060205,
                19060205, 21060205, 24060205, 25060205, 26060205, 27060205, 28060205, 30060205, 31060205,
                32060205, 33060205};

        // 后二组选单式
        int[] GROUP55 = {1060206, 2060206, 3060206, 8060206, 9060206, 10060206, 12060206, 13060206,
                19060206, 21060206, 24060206, 25060206, 26060206, 27060206, 28060206, 30060206, 31060206,
                32060206, 33060206};

        // 后二组选和值
        int[] GROUP56 = {1060207, 2060207, 3060207, 8060207, 9060207, 10060207, 12060207, 13060207,
                19060207, 21060207, 24060207, 25060207, 26060207, 27060207, 28060207, 30060207, 31060207,
                32060207, 33060207};

        // 后二组选包胆
        int[] GROUP57 = {1060208, 2060208, 3060208, 8060208, 9060208, 10060208, 12060208, 13060208,
                19060208, 21060208, 24060208, 25060208, 26060208, 27060208, 28060208, 30060208, 31060208,
                32060208, 33060208};

        // 一星定位胆复式
        int[] GROUP58 = {1070101, 2070101, 3070101, 8070101, 9070101, 10070101, 12070101, 13070101,
                19070101, 21070101, 24070101, 25070101, 26070101, 27070101, 28070101, 30070101, 31070101,
                32070101, 33070101};

        // 前三一码不定位
        int[] GROUP59 = {1080101, 2080101, 3080101, 8080101, 9080101, 10080101, 12080101, 13080101,
                19080101, 21080101, 24080101, 25080101, 26080101, 27080101, 28080101, 30080101, 31080101,
                32080101, 33080101};

        // 前三二码不定位
        int[] GROUP60 = {1080102, 2080102, 3080102, 8080102, 9080102, 10080102, 12080102, 13080102,
                19080102, 21080102, 24080102, 25080102, 26080102, 27080102, 28080102, 30080102, 31080102,
                32080102, 33080102};

        // 中三一码不定位
        int[] GROUP61 = {1080103, 2080103, 3080103, 8080103, 9080103, 10080103, 12080103, 13080103,
                19080103, 21080103, 24080103, 25080103, 26080103, 27080103, 28080103, 30080103, 31080103,
                32080103, 33080103};

        // 中三二码不定位
        int[] GROUP62 = {1080104, 2080104, 3080104, 8080104, 9080104, 10080104, 12080104, 13080104,
                19080104, 21080104, 24080104, 25080104, 26080104, 27080104, 28080104, 30080104, 31080104,
                32080104, 33080104};

        // 后三一码不定位
        int[] GROUP63 = {1080105, 2080105, 3080105, 8080105, 9080105, 10080105, 12080105, 13080105,
                19080105, 21080105, 24080105, 25080105, 26080105, 27080105, 28080105, 30080105, 31080105,
                32080105, 33080105};

        // 后三二码不定位
        int[] GROUP64 = {1080106, 2080106, 3080106, 8080106, 9080106, 10080106, 12080106, 13080106,
                19080106, 21080106, 24080106, 25080106, 26080106, 27080106, 28080106, 30080106, 31080106,
                32080106, 33080106};

        // 四星一码不定位
        int[] GROUP65 = {1080201, 2080201, 3080201, 8080201, 9080201, 10080201, 12080201, 13080201,
                19080201, 21080201, 24080201, 25080201, 26080201, 27080201, 28080201, 30080201, 31080201,
                32080201, 33080201};

        // 四星二码不定位
        int[] GROUP66 = {1080202, 2080202, 3080202, 8080202, 9080202, 10080202, 12080202, 13080202,
                19080202, 21080202, 24080202, 25080202, 26080202, 27080202, 28080202, 30080202, 31080202,
                32080202, 33080202};

        // 五星二码不定位
        int[] GROUP67 = {1080301, 2080301, 3080301, 8080301, 9080301, 10080301, 12080301, 13080301,
                19080301, 21080301, 24080301, 25080301, 26080301, 27080301, 28080301, 30080301, 31080301,
                32080301, 33080301};

        // 五星三码不定位
        int[] GROUP68 = {1080302, 2080302, 3080302, 8080302, 9080302, 10080302, 12080302, 13080302,
                19080302, 21080302, 24080302, 25080302, 26080302, 27080302, 28080302, 30080302, 31080302,
                32080302, 33080302};

        // 任二直选复式
        int[] GROUP69 = {1090101, 2090101, 3090101, 8090101, 9090101, 10090101, 12090101, 13090101,
                19090101, 21090101, 24090101, 25090101, 26090101, 27090101, 28090101, 30090101, 31090101,
                32090101, 33090101};

        // 任二直选单式
        int[] GROUP70 = {1090102, 2090102, 3090102, 8090102, 9090102, 10090102, 12090102, 13090102,
                19090102, 21090102, 24090102, 25090102, 26090102, 27090102, 28090102, 30090102, 31090102,
                32090102, 33090102};

        // 任二直选和值
        int[] GROUP71 = {1090103, 2090103, 3090103, 8090103, 9090103, 10090103, 12090103, 13090103,
                19090103, 21090103, 24090103, 25090103, 26090103, 27090103, 28090103, 30090103, 31090103,
                32090103, 33090103};

        // 任二组选复式
        int[] GROUP72 = {1090201, 2090201, 3090201, 8090201, 9090201, 10090201, 12090201, 13090201,
                19090201, 21090201, 24090201, 25090201, 26090201, 27090201, 28090201, 30090201, 31090201,
                32090201, 33090201};

        // 任二组选单式
        int[] GROUP73 = {1090202, 2090202, 3090202, 8090202, 9090202, 10090202, 12090202, 13090202,
                19090202, 21090202, 24090202, 25090202, 26090202, 27090202, 28090202, 30090202, 31090202,
                32090202, 33090202};

        // 任二组选和值
        int[] GROUP74 = {1090203, 2090203, 3090203, 8090203, 9090203, 10090203, 12090203, 13090203,
                19090203, 21090203, 24090203, 25090203, 26090203, 27090203, 28090203, 30090203, 31090203,
                32090203, 33090203};

        // 任三直选复式
        int[] GROUP75 = {1100101, 2100101, 3100101, 8100101, 9100101, 10100101, 12100101, 13100101,
                19100101, 21100101, 24100101, 25100101, 26100101, 27100101, 28100101, 30100101, 31100101,
                32100101, 33100101};

        // 任三直选单式
        int[] GROUP76 = {1100102, 2100102, 3100102, 8100102, 9100102, 10100102, 12100102, 13100102,
                19100102, 21100102, 24100102, 25100102, 26100102, 27100102, 28100102, 30100102, 31100102,
                32100102, 33100102};

        // 任三直选和值
        int[] GROUP77 = {1100103, 2100103, 3100103, 8100103, 9100103, 10100103, 12100103, 13100103,
                19100103, 21100103, 24100103, 25100103, 26100103, 27100103, 28100103, 30100103, 31100103,
                32100103, 33100103};

        // 任三组三复式
        int[] GROUP78 = {1100201, 2100201, 3100201, 8100201, 9100201, 10100201, 12100201, 13100201,
                19100201, 21100201, 24100201, 25100201, 26100201, 27100201, 28100201, 30100201, 31100201,
                32100201, 33100201};

        // 任三组三单式
        int[] GROUP79 = {1100202, 2100202, 3100202, 8100202, 9100202, 10100202, 12100202, 13100202,
                19100202, 21100202, 24100202, 25100202, 26100202, 27100202, 28100202, 30100202, 31100202,
                32100202, 33100202};

        // 任三组六复式
        int[] GROUP80 = {1100203, 2100203, 3100203, 8100203, 9100203, 10100203, 12100203, 13100203,
                19100203, 21100203, 24100203, 25100203, 26100203, 27100203, 28100203, 30100203, 31100203,
                32100203, 33100203};

        // 任三组六单式
        int[] GROUP81 = {1100204, 2100204, 3100204, 8100204, 9100204, 10100204, 12100204, 13100204,
                19100204, 21100204, 24100204, 25100204, 26100204, 27100204, 28100204, 30100204, 31100204,
                32100204, 33100204};

        // 任三混合组选
        int[] GROUP82 = {1100205, 2100205, 3100205, 8100205, 9100205, 10100205, 12100205, 13100205,
                19100205, 21100205, 24100205, 25100205, 26100205, 27100205, 28100205, 30100205, 31100205,
                32100205, 33100205};

        // 任三组选和值
        int[] GROUP83 = {1100206, 2100206, 3100206, 8100206, 9100206, 10100206, 12100206, 13100206,
                19100206, 21100206, 24100206, 25100206, 26100206, 27100206, 28100206, 30100206, 31100206,
                32100206, 33100206};

        // 任四直选复式
        int[] GROUP84 = {1110101, 2110101, 3110101, 8110101, 9110101, 10110101, 12110101, 13110101,
                19110101, 21110101, 24110101, 25110101, 26110101, 27110101, 28110101, 30110101, 31110101,
                32110101, 33110101};

        // 任四直选单式
        int[] GROUP85 = {1110102, 2110102, 3110102, 8110102, 9110102, 10110102, 12110102, 13110102,
                19110102, 21110102, 24110102, 25110102, 26110102, 27110102, 28110102, 30110102, 31110102,
                32110102, 33110102};

        // 任四组选24
        int[] GROUP86 = {1110201, 2110201, 3110201, 8110201, 9110201, 10110201, 12110201, 13110201,
                19110201, 21110201, 24110201, 25110201, 26110201, 27110201, 28110201, 30110201, 31110201,
                32110201, 33110201};

        // 任四组选12
        int[] GROUP87 = {1110202, 2110202, 3110202, 8110202, 9110202, 10110202, 12110202, 13110202,
                19110202, 21110202, 24110202, 25110202, 26110202, 27110202, 28110202, 30110202, 31110202,
                32110202, 33110202};

        // 任四组选6
        int[] GROUP88 = {1110203, 2110203, 3110203, 8110203, 9110203, 10110203, 12110203, 13110203,
                19110203, 21110203, 24110203, 25110203, 26110203, 27110203, 28110203, 30110203, 31110203,
                32110203, 33110203};

        // 任四组选4
        int[] GROUP89 = {1110204, 2110204, 3110204, 8110204, 9110204, 10110204, 12110204, 13110204,
                19110204, 21110204, 24110204, 25110204, 26110204, 27110204, 28110204, 30110204, 31110204,
                32110204, 33110204};

        // 后三直选复式
        int[] GROUP90 = {1120101, 2120101, 3120101, 8120101, 9120101, 10120101, 12120101, 13120101,
                19120101, 21120101, 24120101, 25120101, 26120101, 27120101, 28120101, 30120101, 31120101,
                32120101, 33120101};

        // 后三直选单式
        int[] GROUP91 = {1120102, 2120102, 3120102, 8120102, 9120102, 10120102, 12120102, 13120102,
                19120102, 21120102, 24120102, 25120102, 26120102, 27120102, 28120102, 30120102, 31120102,
                32120102, 33120102};

        // 后三直选和值
        int[] GROUP92 = {1120103, 2120103, 3120103, 8120103, 9120103, 10120103, 12120103, 13120103,
                19120103, 21120103, 24120103, 25120103, 26120103, 27120103, 28120103, 30120103, 31120103,
                32120103, 33120103};

        // 后三直选跨度
        int[] GROUP93 = {1120104, 2120104, 3120104, 8120104, 9120104, 10120104, 12120104, 13120104,
                19120104, 21120104, 24120104, 25120104, 26120104, 27120104, 28120104, 30120104, 31120104,
                32120104, 33120104};

        // 后三组三
        int[] GROUP94 = {1120201, 2120201, 3120201, 8120201, 9120201, 10120201, 12120201, 13120201,
                19120201, 21120201, 24120201, 25120201, 26120201, 27120201, 28120201, 30120201, 31120201,
                32120201, 33120201};

        // 后三组六
        int[] GROUP95 = {1120202, 2120202, 3120202, 8120202, 9120202, 10120202, 12120202, 13120202,
                19120202, 21120202, 24120202, 25120202, 26120202, 27120202, 28120202, 30120202, 31120202,
                32120202, 33120202};

        // 后三组选和值
        int[] GROUP96 = {1120203, 2120203, 3120203, 8120203, 9120203, 10120203, 12120203, 13120203,
                19120203, 21120203, 24120203, 25120203, 26120203, 27120203, 28120203, 30120203, 31120203,
                32120203, 33120203};

        // 后三组选包胆
        int[] GROUP97 = {1120204, 2120204, 3120204, 8120204, 9120204, 10120204, 12120204, 13120204,
                19120204, 21120204, 24120204, 25120204, 26120204, 27120204, 28120204, 30120204, 31120204,
                32120204, 33120204};

        // 后三混合组选
        int[] GROUP98 = {1120205, 2120205, 3120205, 8120205, 9120205, 10120205, 12120205, 13120205,
                19120205, 21120205, 24120205, 25120205, 26120205, 27120205, 28120205, 30120205, 31120205,
                32120205, 33120205};

        // 后二直选复式
        int[] GROUP99 = {1130101, 2130101, 3130101, 8130101, 9130101, 10130101, 12130101, 13130101,
                19130101, 21130101, 24130101, 25130101, 26130101, 27130101, 28130101, 30130101, 31130101,
                32130101, 33130101};

        // 后二直选单式
        int[] GROUP100 = {1130102, 2130102, 3130102, 8130102, 9130102, 10130102, 12130102, 13130102,
                19130102, 21130102, 24130102, 25130102, 26130102, 27130102, 28130102, 30130102, 31130102,
                32130102, 33130102};

        // 后二直选和值
        int[] GROUP101 = {1130103, 2130103, 3130103, 8130103, 9130103, 10130103, 12130103, 13130103,
                19130103, 21130103, 24130103, 25130103, 26130103, 27130103, 28130103, 30130103, 31130103,
                32130103, 33130103};

        // 后二直选跨度
        int[] GROUP102 = {1130104, 2130104, 3130104, 8130104, 9130104, 10130104, 12130104, 13130104,
                19130104, 21130104, 24130104, 25130104, 26130104, 27130104, 28130104, 30130104, 31130104,
                32130104, 33130104};

        // 后二组选复式
        int[] GROUP103 = {1130201, 2130201, 3130201, 8130201, 9130201, 10130201, 12130201, 13130201,
                19130201, 21130201, 24130201, 25130201, 26130201, 27130201, 28130201, 30130201, 31130201,
                32130201, 33130201};

        // 后二组选单式
        int[] GROUP104 = {1130202, 2130202, 3130202, 8130202, 9130202, 10130202, 12130202, 13130202,
                19130202, 21130202, 24130202, 25130202, 26130202, 27130202, 28130202, 30130202, 31130202,
                32130202, 33130202};

        // 后二组选和值
        int[] GROUP105 = {1130203, 2130203, 3130203, 8130203, 9130203, 10130203, 12130203, 13130203,
                19130203, 21130203, 24130203, 25130203, 26130203, 27130203, 28130203, 30130203, 31130203,
                32130203, 33130203};

        // 后二组选包胆
        int[] GROUP106 = {1130204, 2130204, 3130204, 8130204, 9130204, 10130204, 12130204, 13130204,
                19130204, 21130204, 24130204, 25130204, 26130204, 27130204, 28130204, 30130204, 31130204,
                32130204, 33130204};

        // 一星定位胆复式
        int[] GROUP107 = {1140101, 2140101, 3140101, 8140101, 9140101, 10140101, 12140101, 13140101,
                19140101, 21140101, 24140101, 25140101, 26140101, 27140101, 28140101, 30140101, 31140101,
                32140101, 33140101};

        // 后三一码不定位
        int[] GROUP108 = {1150101, 2150101, 3150101, 8150101, 9150101, 10150101, 12150101, 13150101,
                19150101, 21150101, 24150101, 25150101, 26150101, 27150101, 28150101, 30150101, 31150101,
                32150101, 33150101};

        // 后三二码不定位
        int[] GROUP109 = {1150102, 2150102, 3150102, 8150102, 9150102, 10150102, 12150102, 13150102,
                19150102, 21150102, 24150102, 25150102, 26150102, 27150102, 28150102, 30150102, 31150102,
                32150102, 33150102};

        // 龙虎和(万千)
        int[] GROUP110 = {1160101, 2160101, 3160101, 8160101, 9160101, 10160101, 12160101, 13160101,
                19160101, 21160101, 24160101, 25160101, 26160101, 27160101, 28160101, 30160101, 31160101,
                32160101, 33160101};

        // 龙虎和(万百)
        int[] GROUP111 = {1160102, 2160102, 3160102, 8160102, 9160102, 10160102, 12160102, 13160102,
                19160102, 21160102, 24160102, 25160102, 26160102, 27160102, 28160102, 30160102, 31160102,
                32160102, 33160102};

        // 龙虎和(万十)
        int[] GROUP112 = {1160103, 2160103, 3160103, 8160103, 9160103, 10160103, 12160103, 13160103,
                19160103, 21160103, 24160103, 25160103, 26160103, 27160103, 28160103, 30160103, 31160103,
                32160103, 33160103};

        // 龙虎和(万个)
        int[] GROUP113 = {1160104, 2160104, 3160104, 8160104, 9160104, 10160104, 12160104, 13160104,
                19160104, 21160104, 24160104, 25160104, 26160104, 27160104, 28160104, 30160104, 31160104,
                32160104, 33160104};

        // 龙虎和(千百)
        int[] GROUP114 = {1160105, 2160105, 3160105, 8160105, 9160105, 10160105, 12160105, 13160105,
                19160105, 21160105, 24160105, 25160105, 26160105, 27160105, 28160105, 30160105, 31160105,
                32160105, 33160105};

        // 龙虎和(千十)
        int[] GROUP115 = {1160106, 2160106, 3160106, 8160106, 9160106, 10160106, 12160106, 13160106,
                19160106, 21160106, 24160106, 25160106, 26160106, 27160106, 28160106, 30160106, 31160106,
                32160106, 33160106};

        // 龙虎和(千个)
        int[] GROUP116 = {1160107, 2160107, 3160107, 8160107, 9160107, 10160107, 12160107, 13160107,
                19160107, 21160107, 24160107, 25160107, 26160107, 27160107, 28160107, 30160107, 31160107,
                32160107, 33160107};

        // 龙虎和(百十)
        int[] GROUP117 = {1160108, 2160108, 3160108, 8160108, 9160108, 10160108, 12160108, 13160108,
                19160108, 21160108, 24160108, 25160108, 26160108, 27160108, 28160108, 30160108, 31160108,
                32160108, 33160108};

        // 龙虎和(百个)
        int[] GROUP118 = {1160109, 2160109, 3160109, 8160109, 9160109, 10160109, 12160109, 13160109,
                19160109, 21160109, 24160109, 25160109, 26160109, 27160109, 28160109, 30160109, 31160109,
                32160109, 33160109};

        // 龙虎和(十个)
        int[] GROUP119 = {1160110, 2160110, 3160110, 8160110, 9160110, 10160110, 12160110, 13160110,
                19160110, 21160110, 24160110, 25160110, 26160110, 27160110, 28160110, 30160110, 31160110,
                32160110, 33160110};

        // 后二大小单双
        int[] GROUP120 = {1160201, 2160201, 3160201, 8160201, 9160201, 10160201, 12160201, 13160201,
                19160201, 21160201, 24160201, 25160201, 26160201, 27160201, 28160201, 30160201, 31160201,
                32160201, 33160201};

        // 后三大小单双
        int[] GROUP121 = {1160202, 2160202, 3160202, 8160202, 9160202, 10160202, 12160202, 13160202,
                19160202, 21160202, 24160202, 25160202, 26160202, 27160202, 28160202, 30160202, 31160202,
                32160202, 33160202};

        // 前二大小单双
        int[] GROUP122 = {1160203, 2160203, 3160203, 8160203, 9160203, 10160203, 12160203, 13160203,
                19160203, 21160203, 24160203, 25160203, 26160203, 27160203, 28160203, 30160203, 31160203,
                32160203, 33160203};

        // 前三大小单双
        int[] GROUP123 = {1160204, 2160204, 3160204, 8160204, 9160204, 10160204, 12160204, 13160204,
                19160204, 21160204, 24160204, 25160204, 26160204, 27160204, 28160204, 30160204, 31160204,
                32160204, 33160204};

        // 一帆风顺
        int[] GROUP124 = {1160301, 2160301, 3160301, 8160301, 9160301, 10160301, 12160301, 13160301,
                19160301, 21160301, 24160301, 25160301, 26160301, 27160301, 28160301, 30160301, 31160301,
                32160301, 33160301};

        // 好事成双
        int[] GROUP125 = {1160302, 2160302, 3160302, 8160302, 9160302, 10160302, 12160302, 13160302,
                19160302, 21160302, 24160302, 25160302, 26160302, 27160302, 28160302, 30160302, 31160302,
                32160302, 33160302};

        // 三星报喜
        int[] GROUP126 = {1160303, 2160303, 3160303, 8160303, 9160303, 10160303, 12160303, 13160303,
                19160303, 21160303, 24160303, 25160303, 26160303, 27160303, 28160303, 30160303, 31160303,
                32160303, 33160303};

        // 四季发财
        int[] GROUP127 = {1160304, 2160304, 3160304, 8160304, 9160304, 10160304, 12160304, 13160304,
                19160304, 21160304, 24160304, 25160304, 26160304, 27160304, 28160304, 30160304, 31160304,
                32160304, 33160304};

        // 低频彩
        int[] GROUP128 = {6010101, 7010101, 16010101};
        int[] GROUP129 = {6010102, 7010102, 16010102};
        int[] GROUP130 = {6010103, 7010103, 16010103};
        int[] GROUP131 = {6010201, 7010201, 16010201};
        int[] GROUP132 = {6010202, 7010202, 16010202};
        int[] GROUP133 = {6010203, 7010203, 16010203};
        int[] GROUP134 = {6010204, 7010204, 16010204};
        int[] GROUP135 = {6020101, 7020101, 16020101};
        int[] GROUP136 = {6020102, 7020102, 16020102};
        int[] GROUP137 = {6020103, 7020103, 16020103};
        int[] GROUP138 = {6020104, 7020104, 16020104};
        int[] GROUP139 = {6020201, 7020201, 16020201};
        int[] GROUP140 = {6020202, 7020202, 16020202};
        int[] GROUP141 = {6020203, 7020203, 16020203};
        int[] GROUP142 = {6020204, 7020204, 16020204};
        int[] GROUP143 = {6030101, 7030101, 16030101};
        int[] GROUP144 = {6040101, 7040101, 16040101};
        int[] GROUP145 = {6040102, 7040102, 16040102};

        // 11选5
        int[] GROUP146 = {4010101, 5010101, 11010101, 14010101};
        int[] GROUP147 = {4010102, 5010102, 11010102, 14010102};
        int[] GROUP148 = {4010201, 5010201, 11010201, 14010201};
        int[] GROUP149 = {4010202, 5010202, 11010202, 14010202};
        int[] GROUP150 = {4010203, 5010203, 11010203, 14010203};
        int[] GROUP151 = {4020101, 5020101, 11020101, 14020101};
        int[] GROUP152 = {4020102, 5020102, 11020102, 14020102};
        int[] GROUP153 = {4020201, 5020201, 11020201, 14020201};
        int[] GROUP154 = {4020202, 5020202, 11020202, 14020202};
        int[] GROUP155 = {4020203, 5020203, 11020203, 14020203};
        int[] GROUP156 = {4030101, 5030101, 11030101, 14030101};
        int[] GROUP157 = {4040101, 5040101, 11040101, 14040101};
        int[] GROUP158 = {4050101, 5050101, 11050101, 14050101};
        int[] GROUP159 = {4050102, 5050102, 11050102, 14050102};
        int[] GROUP160 = {4050103, 5050103, 11050103, 14050103};
        int[] GROUP161 = {4050104, 5050104, 11050104, 14050104};
        int[] GROUP162 = {4050105, 5050105, 11050105, 14050105};
        int[] GROUP163 = {4050106, 5050106, 11050106, 14050106};
        int[] GROUP164 = {4050107, 5050107, 11050107, 14050107};
        int[] GROUP165 = {4050108, 5050108, 11050108, 14050108};
        int[] GROUP166 = {4060101, 5060101, 11060101, 14060101};
        int[] GROUP167 = {4060102, 5060102, 11060102, 14060102};
        int[] GROUP168 = {4060103, 5060103, 11060103, 14060103};
        int[] GROUP169 = {4060104, 5060104, 11060104, 14060104};
        int[] GROUP170 = {4060105, 5060105, 11060105, 14060105};
        int[] GROUP171 = {4060106, 5060106, 11060106, 14060106};
        int[] GROUP172 = {4060107, 5060107, 11060107, 14060107};
        int[] GROUP173 = {4060108, 5060108, 11060108, 14060108};
        int[] GROUP174 = {4070101, 5070101, 11070101, 14070101};
        int[] GROUP175 = {4070102, 5070102, 11070102, 14070102};
        int[] GROUP176 = {4070103, 5070103, 11070103, 14070103};
        int[] GROUP177 = {4070104, 5070104, 11070104, 14070104};
        int[] GROUP178 = {4070105, 5070105, 11070105, 14070105};
        int[] GROUP179 = {4070106, 5070106, 11070106, 14070106};
        int[] GROUP180 = {4070107, 5070107, 11070107, 14070107};

    }


    /**
     * 彩系ID及名稱
     *
     * @author Leo
     *
     *         2015年8月4日 上午11:53:37
     */
    interface TicketSeriesType {
        int SSCPlayId = 1030101; // 时时彩，以重庆时时彩前三直选ID为准
        int QPlayID = 5010101; // 11选5，以山东11选5前三直选ID为准
        int DPPlayId = 6010101; // 低频，以福彩3D前三直选ID为准
        int KLPlayId = 18030101; // 快乐彩，以北京PK10猜前三ID为准
        int MMCPlayId = 19030101; // 秒秒彩，前三直选ID为准
        int TGMMCPlayId = 20030101; // 老虎机秒秒彩，前三直选ID为准

        String SSCPlayName = "时时彩";// 时时彩
        String QPlayName = "十一选五";// 十一选五
        String DPPlayName = "低频彩";// 低频彩

        int SSCTicketId = 1;// 重庆时时彩彩种ID
        int QTicketId = 5;// 山东11选5彩种ID
        int DPTicketID = 6;// 低频彩彩种ID
        int KLTicketID = 18;// 快乐彩彩种ID
        int MMCTicketID = 19;// 秒秒彩彩种ID
        int MK6TicketID = 34;// 秒秒彩彩种ID
        int TigerMMCTicketID = 20;// 老虎机彩种ID

        int TYPE_SSC = 1;
        int TYPE_115 = 2;
        int TYPE_DP = 3;
        int TYPE_KL = 4;
        int TYPE_MMC = 5;
        int TYPE_TGMMC = 6;
        int TYPE_K3 = 7;

        int PK_10_DXDS = 18070101;// 大小单双玩法ID

        int[] PK_10_LHH = {18160101, 18160102, 18160103, 18160104, 18160105}; // PK10龙虎

        int[] SSC_QW_DXDS = {1160201, 1160202, 1160203, 1160204, 1670151, 1670152, 1670153, 1670154,
                3160201, 3160202, 3160203, 3160204, 3670151, 3670152, 3670153, 3670154, 8160201, 8160202,
                8160203, 8160204, 8670151, 8670152, 8670153, 8670154, 9160201, 9160202, 9160203, 9160204,
                9670151, 9670152, 9670153, 9670154, 10160201, 10160202, 10160203, 10160204, 10670151,
                10670152, 10670153, 10670154, 12160201, 12160202, 12160203, 12160204, 12670151, 12670152,
                12670153, 12670154, 13160201, 13160202, 13160203, 13160204, 13670151, 13670152, 13670153,
                13670154, 19160201, 19160202, 19160203, 19160204, 19670151, 19670152, 19670153, 19670154,
                20160201, 20160202, 20160203, 20160204, 20670151, 20670152, 20670153, 20670154, 21160201,
                21160202, 21160203, 21160204, 21670151, 21670152, 21670153, 21670154, 24160201, 24160202,
                24160203, 24160204, 24670151, 24670152, 24670153, 24670154, 25160201, 25160202, 25160203,
                25160204, 25670151, 25670152, 25670153, 25670154, 26160201, 26160202, 26160203, 26160204,
                26670151, 26670152, 26670153, 26670154, 27160201, 27160202, 27160203, 27160204, 27670151,
                27670152, 27670153, 27670154, 28160201, 28160202, 28160203, 28160204, 28670151, 28670152,
                28670153, 28670154, 30160201, 30160202, 30160203, 30160204, 30670151, 30670152, 30670153,
                30670154, 31160201, 31160202, 31160203, 31160204, 31670151, 31670152, 31670153, 31670154,
                32160201, 32160202, 32160203, 32160204, 32670151, 32670152, 32670153, 32670154, 33160201,
                33160202, 33160203, 33160204, 33670151, 33670152, 33670153, 33670154};
        int[] SSC_QW_LHH = {1160101, 1160102, 1160103, 1160104, 1160105, 1160106, 1160107, 1160108,
                1160109, 1160110, 3160101, 3160102, 3160103, 3160104, 3160105, 3160106, 3160107, 3160108,
                3160109, 3160110, 8160101, 8160102, 8160103, 8160104, 8160105, 8160106, 8160107, 8160108,
                8160109, 8160110, 9160101, 9160102, 9160103, 9160104, 9160105, 9160106, 9160107, 9160108,
                9160109, 9160110, 10160101, 10160102, 10160103, 10160104, 10160105, 10160106, 10160107,
                10160108, 10160109, 10160110, 12160101, 12160102, 12160103, 12160104, 12160105, 12160106,
                12160107, 12160108, 12160109, 12160110, 13160101, 13160102, 13160103, 13160104, 13160105,
                13160106, 13160107, 13160108, 13160109, 13160110, 19160101, 19160102, 19160103, 19160104,
                19160105, 19160106, 19160107, 19160108, 19160109, 19160110, 20160101, 20160102, 20160103,
                20160104, 20160105, 20160106, 20160107, 20160108, 20160109, 20160110, 21160101, 21160102,
                21160103, 21160104, 21160105, 21160106, 21160107, 21160108, 21160109, 21160110, 24160101,
                24160102, 24160103, 24160104, 24160105, 24160106, 24160107, 24160108, 24160109, 24160110,
                25160101, 25160102, 25160103, 25160104, 25160105, 25160106, 25160107, 25160108, 25160109,
                25160110, 26160101, 26160102, 26160103, 26160104, 26160105, 26160106, 26160107, 26160108,
                26160109, 26160110, 27160101, 27160102, 27160103, 27160104, 27160105, 27160106, 27160107,
                27160108, 27160109, 27160110, 28160101, 28160102, 28160103, 28160104, 28160105, 28160106,
                28160107, 28160108, 28160109, 28160110, 30160101, 30160102, 30160103, 30160104, 30160105,
                30160106, 30160107, 30160108, 30160109, 30160110, 31160101, 31160102, 31160103, 31160104,
                31160105, 31160106, 31160107, 31160108, 31160109, 31160110, 32160101, 32160102, 32160103,
                32160104, 32160105, 32160106, 32160107, 32160108, 32160109, 32160110, 33160101, 33160102,
                33160103, 33160104, 33160105, 33160106, 33160107, 33160108, 33160109, 33160110};// 趣味龙虎和玩法

        int[] SSC_QW_LM =
                {1210101, 1220101, 1230101, 1250101, 1310101, 1320101, 1330101, 1340101, 1350101, 10210101,
                        10220101, 10230101, 10250101, 10310101, 10320101, 10330101, 10340101, 10350101}; // 两面盘趣味盘

        int[] SSC_LM_DNQ = {1310101, 1320101, 1330101, 1340101, 1350101, 10310101, 10320101, 10330101,
                10340101, 10350101}; // 两面盘第N球

        int[] PK10_LM = {18210101, 18230101, 18260101}; // PK10两面盘

        int[] MKSIX_SP = {34010103, 34020201, 34020202, 34020203, 34020204, 34020205, 34020206,
                34030101, 34030103, 34040101, 34050101, 34210101, 34220101, 34230101, 34230102, 34230103,
                34230104, 34230105, 34230106, 34240101, 35010103, 35020201, 35020202, 35020203, 35020204,
                35020205, 35020206, 35030101, 35030103, 35040101, 35050101}; // 六合彩特殊奖金的玩法

        int[] MKSIX_SP_NAME = {34010102, 34010103, 34020201, 34020202, 34020203, 34020204, 34020205,
                34020206, 34030101, 34030103, 34040101, 34050101, 35010102, 35010103, 35020201, 35020202,
                35020203, 35020204, 35020205, 35020206, 35030101, 35030103, 35040101, 35050101}; // 六合彩特殊对应的玩法

        int PK10_QIANERHZ_ID = 18170101; // PK10冠亚军和值
        int PK10_QIANSANHZ_ID = 18170102; // PK10冠亚季军和值

        int[] KL_HZ = {PK10_QIANERHZ_ID, PK10_QIANSANHZ_ID};// PK10和值玩法

        int TYPE_PK10_DA = 1;// pk10玩法大
        int TYPE_PK10_XIAO = 2;// pk10玩法小
        int TYPE_PK10_DAN = 3;// pk10玩法单
        int TYPE_PK10_SHUANG = 4;// pk10玩法双

        String CH_PK10_DA = "大";// pk10玩法大
        String CH_PK10_XIAO = "小";// pk10玩法小
        String CH_PK10_DAN = "单";// pk10玩法单
        String CH_PK10_SHUANG = "双";// pk10玩法双

        int TYPE_QW_LONG = 0;// 趣味玩法龙
        int TYPE_QW_HU = 1;// 趣味玩法虎
        int TYPE_QW_HE = 2;// 趣味玩法和

        String CH_QW_LONG = "龙";// 趣味玩法龙
        String CH_QW_HU = "虎";// 趣味玩法虎
        String CH_QW_HE = "和";// 趣味玩法和

        String K3_THTX = "三同号通选";
        String K3_LHTX = "三连号通选";

        int[] K3_HZ = {29170101}; // 快3和值
        int[] K3_THTX_ID = {29180101, 29240151}; // 三同号通选
        int[] K3_LHTX_ID = {29200101, 29260151}; // 三连号通选
        int[] K3_THDX_ID = {29210102, 29280151}; // 二同号(单选)
    }

    /**
     * 彩种ID
     *
     * @author Leo
     *
     *         2015年8月4日 上午11:53:37
     */
    interface TicketType {
        int SSCPlayId = 1030101; // 时时彩，以重庆时时彩前三直选ID为准
        int QPlayID = 5010101; // 11选5，以山东11选5前三直选ID为准
        int DPPlayId = 6010101; // 低频，以福彩3D前三直选ID为准

        int XJSSC_ID = 3;

        String SSCPlayName = "时时彩";// 时时彩
        String QPlayName = "十一选五";// 十一选五
        String DPPlayName = "低频彩";// 低频彩

        int CQSSC = 1; // 重庆时时彩
        int JXSSC = 2; // 江西时时彩
        int XJSSC = 3; // 新疆时时彩
        int GD115 = 4; // 广东11选5
        int SD115 = 5; // 山东11选5
        int FC3D = 6; // 福彩3D
        int P5P3 = 7; // 排5排3
        int TJSSC = 8; // 天津时时彩
        int HLJSSC = 9; // 黑龙江时时彩
        int FFC = 10; // 分分彩
        int JX115 = 11; // 江西11选5
        int FFC5 = 12; // 5分彩
        int FFC3 = 13; // 3分彩

        int FFC115 = 14; // 11选5分分彩
        int FFC3115 = 15; // 11选5三分彩

        int FFC3D = 16; // 福彩3D分分彩
        int FFC53D = 17; // 福彩3D五分彩

        int BJPK10 = 18; // 北京PK10
        int MMC = 19; // 秒秒彩
        int TIGERMMC = 20; // 老虎机秒秒彩

        int KR105 = 21; // 韩国1.5分彩

        int SH115 = 22; // 上海11选5
        int JS115 = 23; // 江苏11选5
        int TWBG = 24; // 台湾宾果
        int XJP2 = 25; // 新加坡2分彩
        int BJ5 = 26; // 北京5分彩
        int DJ105 = 27; // 东京1.5分彩
        int F105 = 28; // 1.5分彩
        int JSK3 = 29; // 江苏快三
        int CD305 = 30; // 加拿大3.5
        int TXFFC = 31; // QQ分分彩
        int QQ30 = 32; // QQ30秒
        int QQ105 = 33; // QQ1.5分彩
        int MKSIX = 34; // 六合彩
        int MKSIXSELF = 35; // 自营六合彩
        int TXFFC3D = 36; // QQ3D分分彩
        int QQFFC = 37; // 腾讯分分彩
        int QQFFC3D = 38; // 腾讯3D分分彩
        int PK10FFC = 39; // PK10分分彩
        int HN115 = 40; // 河南11选5
        int BJ115 = 41; // 北京11选5

        int[] IDS_KL = new int[] {BJPK10};
        int[] IDS_DP = new int[] {FC3D, P5P3, FFC3D, FFC53D, TXFFC3D, QQFFC3D};
        int[] IDS_SSC = new int[] {CQSSC, JXSSC, XJSSC, TJSSC, HLJSSC, FFC, FFC5, FFC3, MMC, TIGERMMC,
                KR105, TWBG, XJP2, BJ5, DJ105, F105, CD305, TXFFC, QQ30, QQ105, QQFFC};
        int[] IDS_115 = new int[] {GD115, SD115, JX115, FFC115, FFC3115, SH115, JS115,HN115,BJ115};
        int[] IDS_K3 = new int[] {JSK3};
        int[] SELF = new int[] {FFC, FFC5, FFC3, FFC115, FFC3115, FFC3D, FFC53D, MMC, TIGERMMC, F105,
                QQ30, QQ105, MKSIXSELF};
        int[] OFFICIAL = new int[] {CQSSC, JXSSC, XJSSC, GD115, SD115, FC3D, P5P3, TJSSC, HLJSSC, JX115,
                BJPK10, KR105, SH115, JS115, TWBG, XJP2, BJ5, DJ105, JSK3, CD305, TXFFC, QQ30, QQ105,
                TXFFC3D, QQFFC, QQFFC3D};
        int[] HANDICAP_TICKET = {CQSSC, FFC, BJPK10, MKSIX};
    }

    /**
     * 系统用户状态
     *
     * @author Leo
     *
     *         2015年8月11日 上午11:23:01
     */
    interface SuperUserStatus {
        int LOCKED = 1; // 已锁定
        int UNLOCKED = 0; // 未锁定
    }

    /**
     * 审核状态
     *
     * @author Leo
     *
     *         2015年8月21日 下午4:59:07
     */
    interface ApproveStatus {
        int UNAPPROVED = 0; // 未审核
        int ACCEPT = 1; // 同意
        int REJECT = 2; // 拒绝
    }

    /**
     * 后台用户信息KEY
     */
    String SUPER_USER_INFO = "super_user_info";

    /**
     * 用户操作数据（解冻/冻结/回收）
     */
    interface UserManageValue {
        int RANGE_SIGLE = 200;// 个人
        int RANGE_ALL = 201;// 所有下级

        int RESET_LP = 61;// 重置登录密码
        int RESET_PP = 62;// 充值资金密码
        int RESET_DS = 63;// 删除用户密码

        String RESET_LP_NAME = "重置登录密码";// 重置登录密码
        String RESET_PP_NAME = "重置资金密码";// 充值资金密码
        String RESET_DS_NAME = "删除密保问题";// 删除用户密码

        int WOKRING = 0;// 正常
        int DISABLED = 100;// 冻结,只登录
        int DEEP_DISABLED = 101;// 冻结，完全冻结
        int ENABLED = 102;// 解冻
        int RECOVER = 103;// 回收
        int RESET = 104;// 重置
        int BYPARENT = 105;// 手工开户
        int BYSUPER = 106;// 总代开户
        int BYMOBILE = 107;// 手机端注册

        String USERINFO = null;// 用戶暱稱，QQ，郵箱重置為空
        String LOGINPWD = "123qwe";// 初始化登录密码
        String MONEYPWD = "123qwe";// 初始化登录密码
        String ENCRYUUID = "global^&*()2016"; // uuid加密

        Short BANKCARDSTATUS = 1;// 銀行卡狀態：0，未刪除，1，已刪除
        int BANKCARDLOCKSTATUS = 0;// 銀行卡狀態：0，未鎖定，1，已鎖定

        int LETTERDELSTATUS = 1;// 站内信状态：0，未删除，1，已删除

        int HAVESUB = 50;// 包含下级
        int NOSUB = 51;// 不包含下级

        String RANGE_SIGLE_NAME = "仅冻结此用户";// 个人
        String RANGE_ALL_NAME = "冻结该用户和所有下级";// 所有下级

        String ENABLED_RANGE_SIGLE_NAME = "仅解冻此用户";// 个人
        String ENABLED_RANGE_ALL_NAME = "解冻该用户和所有下级";// 所有下级

        String DISABLED_NAME = "可登陆，不可投注，不可充提";// 冻结，完全冻结
        String DEEP_DISABLED_NAME = "完全冻结";// 冻结，完全冻结

        String DISABLED_TYPE_NAME = "冻结";// 冻结名称
        String ENABLED_TYPE_NAME = "解冻";// 解冻名称
        String RECOVER_TYPE_NAME = "回收";// 回收名称
        String RESET_TYPE_NAME = "申诉";// 申诉名称
    }

    /**
     * 验证类型限制
     */
    interface verifyType {
        int VERIFYNUM = 3;// 3次验证失败禁止验证

        int NOTHAVEINTERFACE = 0;// 接口未设置
        int HAVEINTERFACE = 1;// 接口已设置

    }

    /**
     * 记录清理时间
     */
    interface recodeClear {
        long clearDay = 30 * 24 * 3600 * 1000l;// 30天前的记录清理
    }

    /**
     * 站内信称呼
     */
    interface letterName {
        String PARENT = "我的上级";// 上级的称呼
        String ME = "我";// 我
        String SUPERUSER = "系统管理员";// 系统管理员
    }

    /**
     * 系统通知模板ID
     */
    interface SystemNoticeTemplete {
        int RECHARGE = 1;// 充值到账
        int WITHDRAW = 2;// 提现成功
        int TRANSFER = 3;// 转账成功
        int LOGINPWD = 4;// 修改登录密码
        int PAYPWD = 5;// 修改资金密码
        int PWDSECURITY = 6;// 修改密保问题
        int BANKCAD = 7;// 绑定银行卡
        int LOGIN = 8;// 异常登录
        int WIN = 9;// 中奖通知
        int SEND_GIFT = 10;// 发送礼物
    }

    interface LoginType {
        int TYPE_PC = 0;
        int TYPE_ANDROID = 1;
        int TYPE_IOS = 2;
        String PC = "网站门户";// PC端登录
        String IOS = "IOS客户端";// IOS客户端
        String ANDROID = "Android客户端"; // Android客户端
    }

    interface noticeSendType {
        int SYSTEMNOTICE_TYPE = 1;// 系统通知
        int EMAILNOTICE_TYPE = 2;// 移动端登录
        int DESKTOPNOTICE_TYPE = 3; // 桌面通知

        String SYSTEMNOTICE = "系统通知";// 系统通知
        String EMAILNOTICE = "邮件通知";// 移动端登录
        String DESKTOPNOTICE = "桌面通知"; // 桌面通知
    }

    interface noticeTargetName {
        String LEVEL0 = "13.0（招商）";
        String LEVEL1 = "13.0（直属）";
        String LEVEL2 = "12.8";
        String LEVEL3 = "12.8（平级）";
        String LEVEL4 = "12.8（玩家）";
        String LEVEL5 = "12.7";
        String LEVEL6 = "12.7（平级）";
        String LEVEL7 = "12.6";
        String LEVEL8 = "12.6（平级）";
        String LEVEL9 = "12.5";
        String LEVEL10 = "12.5（平级）";
        String LEVEL11 = "12.5以下";
    }

    interface wordBlackType {
        String UNAME = "昵称";// 昵称
        String USERNAME = "用户名";// 用户名
        String LETTER = "站内信";// 站内信
        int UNAME_TYPE = 1;// 昵称
        int USERNAME_TYPE = 2;// 用户名
        int LETTER_TYPE = 3;// 站内信
    }

    /**
     * 任务完成状态
     *
     * @author Leo
     *
     *         2015年11月9日 上午10:55:01
     */
    interface TaskStatus {
        int COMPLETE = 1;
        int UNCOMPLETE = 0;
        int GET = 1;
        int UNGET = 0;
    }

    /**
     * 装置 0PC，1Android，2IOS，3H5
     */
    interface DEVICE {
        int PC = 0;
        int ANDRIOD = 1;
        int IOS = 2;
        int H5 = 3;
        int MOBILE = 9;
    }

    /** 可投注的最高返点 */
    int BET_TOP_REBATE = 128;

    /** 最高返点 */
    int TOP_REBATE = 130;

    int[] REBATE_LEVEL130 = {125, 126, 127, 128, 129, 130}; // 直属13.0
    int[] REBATE_LEVEL_SUB130 = {125, 126, 127, 128, 129}; // 平级13.0
    int[] REBATE_LEVEL129 = {125, 126, 127, 128, 129}; // 12.9
    int[] REBATE_LEVEL_SUB129 = {125, 126, 127, 128}; // 平级12.9
    int[] REBATE_LEVEL128 = {125, 126, 127, 128}; // 12.8
    int[] REBATE_LEVEL_SUB128 = {125, 126, 127}; // 平级12.8
    int[] REBATE_LEVEL127 = {125, 126, 127}; // 12.7
    int[] REBATE_LEVEL_SUB127 = {125, 126}; // 平级12.7
    int[] REBATE_LEVEL126 = {125, 126}; // 12.6
    int[] REBATE_LEVEL_SUB126 = {125}; // 平级12.6
    int[] REBATE_LEVEL125 = {125}; // 12.5

    /** 后台Dashboard数据获取天数 */
    int dataDays = 60;

    /** 系统通知清理时间 **/
    int noticeClear = 30;

    interface DividStatus {
        int OK = 0; // 正常
        int GOT = 1; // 已领取
        int REJECT = 2; // 已拒绝
        int REQ = 3; // 申请中
        int STAT = 9; // 统计中
    }

    interface DividAgreementStatus {
        // 0申请中，1已签约，2已拒绝，3申请解约中，4已经解约，5拒绝解约
        int REQ = 0; // 申请中
        int SIGN = 1; // 已签约
        int REJECT = 2; // 已拒绝
        int CANCELREQ = 3; // 解约申请
        int CANCELED = 4; // 已经解约
        int CANCELREJECT = 5; // 拒绝解约
        int CHANGING = 6; // 变更中
    }

    interface DividAgreementLogAction {
        // 1:发起签约, 2:下级同意签约, 3:上级修改协议, 5:下级同意修改, 6:下级拒绝修改, 7:修改确认过期, 8:申请解约, 9:解约未通过, 10:签约过期,
        // 11:下级拒绝签约, 12:解约通过
        int START_AGREE = 1;
        int SUB_ACCCPT_AGREE = 2;
        int PARENT_MODIFY = 3;
        int SUB_ACCEPT_MODIFY = 5;
        int SUB_REJECT_MODIFY = 6;
        int EXPIRED_MODIFY = 7;
        int CANCEL_AGREE = 8;
        int REJECT_CANCEL = 9;
        int EXPIRED_AGREE = 10;
        int SUB_REJECT_AGREE = 11;
        int ACCEPT_CANCEL_AGREE = 12;
    }

    interface IntegralActionId {
        int RECHARGE_QQ=1500;
        int RECHARGE_FLOW=1400;
        int RECHARGE_PHONE=1300;
        int GIVE = 1200;
        int ACTIVITY_MANUAL = 1100;
        int ACTIVITY_LUCKY = 1000;
        int EXCHANGE_GIFT = 900;
        int EXCHANGE_COUPON = 800;
        int MISSION_BONUS = 700;
        int ADD_BET = 600;
        int ADD_RECHARGE = 500;
        int ADD_USER_DATA = 400;
        int ADD_SIGN = 300;
        int ADD_LOGIN = 200;
        int ADD_REGISTER = 100;
        int ACTIVITY_GET = 2000;
    }

    interface IntegralActionName {
        String RECHARGE_QQ="QQ充值";
        String RECHARGE_FLOW="兑换流量";
        String RECHARGE_PHONE="兑换话费";
        String GIVE = "赠送";
        String ACTIVITY_MANUAL = "调整积分";
        String ACTIVITY_LUCKY = "幸运夺宝";
        String EXCHANGE_GIFT = "兑换礼物";
        String EXCHANGE_COUPON = "兑换券";
        String MISSION_BONUS = "任务奖励";
        String ADD_BET = "投注";
        String ADD_RECHARGE = "充值";
        String ADD_USER_DATA = "补全资料";
        String ADD_SIGN = "签到";
        String ADD_LOGIN = "登录";
        String ADD_REGISTER = "注册";
        String ACTIVITY_GET = "活动积分奖励";
    }

    interface WebSocketFunction {
        int SCAN_LOGIN = 1;
        int CHANGE_SCAN_TOKEN = 2;
    }

    interface SysNotice {
        List<Integer> DEFAULT_ON = ImmutableList.of(4, 5, 6, 7);
    }

    // 顶部采种
    interface TicketTop {
        List<Integer> DEFAULT_TICKET_IDS = ImmutableList.of(1, 19, 32, 10, 21, 27, 25, 13); // 默认普通彩种
        List<Integer> DEFAULT_PK_TICKET_IDS = ImmutableList.of(1, 10, 18, 34); // 默认盘口彩种
    }

    // 假的用户
    public enum FakeUserType {
        PLAYER125("000-000-000-000-player125"), AGENT125("000-000-000-000-agent125"), AGENT128("000-000-000-000-agent128");

        private String token;

        private FakeUserType(String token) {
            this.token = token;
        }

        public String getToken() {
            return token;
        }
    }

    interface UserCouponWayId {
        int ACTIVITY = 2;
        int GIVE = 3;
        int AUTO_CONTINNUOUS = 4;
        int AUTO_PRIZE = 5;
        int AUTO_LARGE = 6;
        int AUTO_RATE = 7;
        int AUTO_LOGIN = 8;
    }
}
